generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model Provinces{
  id Int @id @default(autoincrement())
  name               String
  type               String
  garage             Garage[]
}
model Districts{
  id Int @id @default(autoincrement())
  name               String
  type               String
  province_id        Int
  garage             Garage[]
}
model Wards{
  id Int @id @default(autoincrement())
  name               String
  type               String
  district_id        Int
  garage             Garage[]
}
model Garage {
  id                  String @id @default(uuid())
  routeId             Int?
  code                String
  uuId                String?
  name                String
  shortName           String?
  logo                String?
  banner              String?
  photos              String? @db.Text
  phoneNumber         String?
  email               String?
  website             String?
  address             String?
  description         String? @db.Text
  social              String? @db.Text
  status              STATUS @default(PUBLIC)
  product             Product[]
  order               Order[]
  customers           Customer[]
  cars                Car[]
  serviceAdvisor      ServiceAdvisor[]
  // productCategory     ProductCategory[]
  orderCategoies      OrderCategory[]
  productBrands       ProductBrand[]
  carStyle            CarStyle[]
  customerGroups      CustomerGroup[]
  suppilers           Suppiler[]
  financeCards        FinanceCard[]
  MarketingCampaigns  MarketingCampaign[]
  marketingCampaignDetails MarketingCampaignDetail[]
  orderDetails        OrderDetail[]
  amenities           GaragesOnAmenities[]
  posts               Post[]
  postCategories      PostCategory[]
  province            Provinces @relation(fields: [provinceId], references: [id])
  provinceId          Int @default(1)
  district            Districts @relation(fields: [districtId], references: [id])
  districtId          Int @default(1)
  ward                Wards @relation(fields: [wardId], references: [id])
  wardId              Int @default(1)
  bitlyTitle          String?
  bitlyLongUrl        String?
  groupGuid           String?
  bitlyUrl            String?
  reviews             ReviewsGarage[]
  user                User[]
  slideBanners        slideBanner[]
}


model Amenities {
  id                  String @id @default(uuid())
  title               String
  thumbnail           String?
  description         String? @db.Text
  garagesOnAmenities  GaragesOnAmenities[]
}
model GaragesOnAmenities {
  garage            Garage         @relation(fields: [garageId], references: [id])
  garageId          String // relation scalar field (used in the `@relation` attribute above)
  amenities         Amenities @relation(fields: [amenityId], references: [id])
  amenityId         String // relation scalar field (used in the `@relation` attribute above)
  assignedAt        DateTime        @default(now())
  assignedBy        String

  @@id([garageId, amenityId])
}
model ProductCategory {
  id          String @id @default(uuid())
  title       String
  slug        String
  description String?
  image       String
  createdBy   String                    @default("1")
  garageId    String                    @default("1")
  status      STATUS                 @default(DRAFT)
  createdAt   DateTime               @default(now())
  updatedAt   DateTime               @updatedAt
  products    CategoriesOnProducts[]
}

model Product {
  id              String @id @default(uuid())
  uuID            String?
  productId       Int                    @default(0)
  isProduct       Boolean                @default(true)
  name            String
  slug            String?
  sku             String?
  description     String?                 @db.Text
  price           Int                    @default(0)
  salePrice       Int                    @default(0)
  timeSaleStart   DateTime?              @default(now())
  timeSaleEnd     DateTime?
  quantity        Int                    @default(1)
  categories      CategoriesOnProducts[]
  brands          CarModelsOnProducts[]
  images          Json?
  metaDescription String?     @db.Text
  brandDetail     String?
  supplier        Suppiler @relation(fields: [supplierId], references: [id])
  supplierId      String                    @default("1")
  productBrand    ProductBrand @relation(fields: [productBrandId], references: [id])
  productBrandId  String                    @default("1")
  status          STATUS                 @default(DRAFT)
  createdBy       String                    @default("1")
  garage          Garage @relation(fields: [garageId], references: [id])
  garageId        String                    @default("1")
  createdAt       DateTime               @default(now())
  updatedAt       DateTime               @updatedAt
  marketingCampaignDetail MarketingCampaignDetail[]
  orderDetail     OrderDetail[]
  reviews         ReviewsProduct[]
}

model CategoriesOnProducts {
  product    Product         @relation(fields: [productId], references: [id])
  productId  String // relation scalar field (used in the `@relation` attribute above)
  category   ProductCategory @relation(fields: [categoryId], references: [id])
  categoryId String // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime        @default(now())
  assignedBy String

  @@id([productId, categoryId])
}

model CarModels {
  id          String @id @default(uuid())
  title       String
  description String?
  parentId    String                   @default("0")
  type        CARBRAND              @default(CARBRAND)
  products    CarModelsOnProducts[]
}

model CarModelsOnProducts {
  product      Product   @relation(fields: [productId], references: [id])
  productId    String // relation scalar field (used in the `@relation` attribute above)
  carModel     CarModels @relation(fields: [carModelId], references: [id])
  carModelId   String // relation scalar field (used in the `@relation` attribute above)
  carBrandType CARBRAND  @default(CARBRAND)
  assignedAt   DateTime  @default(now())
  assignedBy   String

  @@id([productId, carModelId])
}
model Order{
  id   String @id @default(uuid())
  slug              String?
  code              String
  customerRequest   String?
  customerNote      String?
  note              String?
  notePrivate       String?
  priorityLevel     Int? @default(1)
  orderCategory     OrderCategory @relation(fields: [orderCategoryId], references: [id])
  orderCategoryId   String @default("1")
  customer          Customer @relation(fields: [customerId], references: [id])
  customerId               String
  billingAdress            String?
  billingPhone             String?
  billingCustomerName      String?
  car               Car @relation(fields: [carId], references: [id])
  carId             String @default("1")
  brandId           String?
  modelId           String?
  yearId            String?
  subTotal          Int @default(0)
  discount          Int @default(0)
  total             Int @default(0)
  dateTime          DateTime  @default(now())
  dateExpected      DateTime  @default(now())
  dateDone          DateTime  @default(now())
  step              Int @default(1)
  status            String @default("pending")
  cancelReason      String?
  garage            Garage @relation(fields: [garageId], references: [id])
  garageId          String @default("0")
  serviceAdvisor    ServiceAdvisor @relation(fields: [serviceAdvisorId], references: [id])
  serviceAdvisorId  String @default("0")
  createdById       String @default("0")
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt  
  orderDetails      OrderDetail[]
  reviews           ReviewsProduct[]
  reviewsGarage     ReviewsGarage[]
  method            ORDERMETHOD @default(OFFLINE)
}
model OrderCategory{
  id              String @id @default(uuid())
  title           String
  order           Order[]
  garage          Garage @relation(fields: [garageId], references: [id])
  garageId        String @default("1")
  status          STATUS @default(PUBLIC)
}

model OrderDetail {
  order               Order @relation(fields: [orderId], references: [id])
  orderId             String  // relation scalar field (used in the `@relation` attribute above)
  product             Product @relation(fields: [productId],references: [id])
  productId           String
  note                String?
  price               Int
  priceSale           Int
  saleType            SALETYPE @default(FIXED)
  saleValue           String @default("0")
  quantity            Float
  subTotal            Int
  total               Int @default(0)
  garage              Garage @relation(fields: [garageId], references: [id])
  garageId            String @default("1")
  createdBy           String @default("1")
  status              STATUS @default(PUBLIC)
  @@id([orderId,productId])
}

model ServiceAdvisor{
  id   String @id @default(uuid())
  fullName                String
  phoneNumber             String?
  email                   String?
  garage                  Garage @relation(fields: [garageId], references: [id])
  garageId                String
  status                  String @default("draft")
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt 
  order                   Order[]
}
model Customer{
  id                  String @id @default(uuid())
  uuId                String?
  fullName            String
  phoneNumber         String?
  cityId              Int?
  districtId          Int?
  wardId              Int?
  address             String?
  dob                 DateTime?
  description         String?
  sex                 SEX @default(MALE)
  status              STATUS @default(PUBLIC)
  garage              Garage @relation(fields: [garageId], references: [id])
  garageId            String @default("1")
  userId              String @default("1")
  cars                Car[]
  customerGroup       CustomerGroupsOnCustomers[]
  orders              Order[]
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  @@fulltext([fullName])
  @@fulltext([fullName, phoneNumber])
}

model CustomerGroup {
  id   String @id @default(uuid())
  title               String
  description         String?
  garage              Garage @relation(fields: [garageId], references: [id])
  garageId            String @default("1")
  customers           CustomerGroupsOnCustomers[]
  status              STATUS @default(PUBLIC)
}

model CustomerGroupsOnCustomers {
  customer            Customer   @relation(fields: [customerId], references: [id])
  customerId          String // relation scalar field (used in the `@relation` attribute above)
  customerGroup       CustomerGroup @relation(fields: [customerGroupId], references: [id])
  customerGroupId     String // relation scalar field (used in the `@relation` attribute above)
  carBrandType        CARBRAND  @default(CARBRAND)
  assignedAt          DateTime  @default(now())
  assignedBy          String

  @@id([customerId, customerGroupId])
}

model Car {
  id   String @id @default(uuid())
  uuId                String?
  customer            Customer @relation(fields: [customerId], references: [id])
  customerId          String @default("1")
  numberPlates        String
  carBrandId          String?
  carNameId           String?
  carYearId           String?
  carStyle            CarStyle @relation(fields: [carStyleId], references: [id])
  carStyleId          String @default("1")
  color               String?
  vinNumber           String?
  machineNumber       String?
  description         String?
  status              STATUS @default(PUBLIC)
  garage              Garage @relation(fields: [garageId], references: [id])
  garageId            String @default("1")
  orders              Order[]
  user                User @relation(fields: [userId],references: [id])
  userId              String  @default("1")
  isDefault           Boolean @default(false)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}

model ProductBrand{
  id   String @id @default(uuid())
  name                String
  description         String?
  garage              Garage @relation(fields: [garageId], references: [id])
  garageId            String @default("1")
  products            Product[]
  status              STATUS @default(PUBLIC)
}

model Suppiler {
  id   String @id @default(uuid())
  uuId                String?
  title               String
  description         String?
  garage              Garage @relation(fields: [garageId], references: [id])
  garageId            String @default("1")
  products            Product[]
  status              STATUS @default(PUBLIC)
}
model CarStyle {
  id   String @id @default(uuid())
  name                String
  description         String?
  garage              Garage @relation(fields: [garageId], references: [id])
  garageId            String @default("1")
  cars                Car[]
  status              STATUS @default(PUBLIC)
}

model MarketingCampaign {
  id                  String @id @default(uuid())
  title               String
  dateTimeStart       DateTime @default(now())
  dateTimeEnd         DateTime @default(now())
  garage              Garage @relation(fields: [garageId], references: [id])
  garageId            String @default("1")
  createdBy           String @default("1")
  status              STATUS @default(PUBLIC)
  detail              MarketingCampaignDetail[]
  banner              String?
  description         String? @db.Text
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}

model MarketingCampaignDetail {
  marketingCampaign   MarketingCampaign @relation(fields: [marketingCampaignId], references: [id])
  marketingCampaignId String // relation scalar field (used in the `@relation` attribute above)
  product             Product @relation(fields: [productId],references: [id])
  productId           String
  note                String?
  price               Int
  priceSale           Int
  saleType            SALETYPE @default(FIXED)
  saleValue           String @default("0")
  quantity            Float
  garage              Garage @relation(fields: [garageId], references: [id])
  garageId            String @default("1")
  createdBy           String @default("1")
  status              STATUS @default(PUBLIC)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  @@id([marketingCampaignId,productId])
}

model FinanceCard {
  id   String @id @default(uuid())
  title           String
  bankName        String
  bankBrand       String?
  bankNumber      String
  bankFullName    String
  garage          Garage @relation(fields: [garageId], references: [id])
  garageId        String @default("1")
  createdBy       String @default("1")
  status          STATUS @default(PUBLIC)
}

model ReviewsProduct {
  id                  String @id @default(uuid())
  product             Product @relation(fields: [productId],references: [id])
  productId           String
  order               Order @relation(fields: [orderId],references: [id])
  orderId             String
  star                Int @default(4)
  message             String?  
  user                User @relation(fields: [createdId],references: [id])
  createdId           String
  status              STATUS @default(PUBLIC)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}

model ReviewsGarage {
  id                  Int @id @default(autoincrement())
  garage              Garage @relation(fields: [garageId],references: [id])
  garageId            String
  order               Order @relation(fields: [orderId],references: [id])
  orderId             String
  star                Int @default(4)
  message             String?
  createdId           Int
  status              STATUS @default(PUBLIC)
  createdAt   DateTime               @default(now())
  updatedAt   DateTime               @updatedAt
}

model Post{
  id                String @id @default(uuid())
  uuId              String?
  slug              String?
  title             String
  description       String @db.Text
  shortDescription  String?   @db.Text
  thumbnail         String
  categories        CategoriesOnPosts[]
  status            STATUS @default(DRAFT)
  createdBy         String @default("1")
  garage            Garage @relation(fields: [garageId], references: [id])
  garageId          String @default("1")
}

model PostCategory{
  id              String @id @default(uuid())
  slug            String?
  title           String
  description     String
  thumbnail       String?
  status          STATUS @default(DRAFT)
  createdBy       String @default("1")
  garage          Garage @relation(fields: [garageId], references: [id])
  garageId        String @default("1")
  posts           CategoriesOnPosts[]
}

model CategoriesOnPosts {
  post            Post         @relation(fields: [postId], references: [id])
  postId          String // relation scalar field (used in the `@relation` attribute above)
  category        PostCategory @relation(fields: [categoryId], references: [id])
  categoryId      String // relation scalar field (used in the `@relation` attribute above)
  assignedAt      DateTime        @default(now())
  assignedBy      String

  @@id([postId, categoryId])
}

model User{
  id   String @id @default(uuid())
  uuId                String
  fullName            String
  phoneNumber         String?
  email               String?
  avatar              String?
  cityId              Int?
  districtId          Int?
  wardId              Int?
  address             String?
  dob                 DateTime?
  description         String?
  sex                 SEX @default(MALE)
  status              STATUS @default(PUBLIC)
  role                USERROLE @default(CUSTOMER)
  garage              Garage @relation(fields: [garageId], references: [id])
  garageId            String @default("1")
  reviewsProduct      ReviewsProduct[]
  cars                Car[]
  @@fulltext([fullName])
  @@fulltext([fullName, phoneNumber])

}


model slideBanner {
  id                String @id @default(uuid())
  title             String
  description       String      @db.Text
  shortDescription  String?     @db.Text
  banners           String
  url               String?
  status            STATUS @default(DRAFT)
  createdBy         String @default("1")
  garage            Garage @relation(fields: [garageId], references: [id])
  garageId          String @default("1")
}

enum SALETYPE {
  FIXED
  PERCENT
}

enum SEX {
  MALE
  FEMALE
  COMPANY
  OTHER
}

enum STATUS {
  PUBLIC
  DRAFT
  PENDING
  DELETE
}

enum CARBRAND {
  CARBRAND
  CARNAME
  CARYEAR
}

enum ORDERMETHOD {
  ONLINE
  OFFLINE
}

enum USERROLE {
  ADMIN
  ADMINGARAGE
  CUSTOMER
  BAN
}